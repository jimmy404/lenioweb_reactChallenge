import React, { useEffect } from 'react';

import styled, { createGlobalStyle } from 'styled-components';
import axios from 'axios';

import { useAppContext } from '../context/AppContext';
import { useRouter } from 'next/router';

import Head from 'next/head';
import Search from '../components/Search/Search';
import CardGrid from '../components/CardGrid/CardGrid';
import Modal from '../components/Modal/Modal';
import DetailCard from '../components/DetailCard/DetailCard';

const GlobalStyle = createGlobalStyle`
	body {
		background-color: #DCDCDC;
	}
`;

const MainContainer = styled.div`
  height: calc(100vh - 80px);
  margin-top: 80px;
  width: 100vw;
`;

const Home = () => {
  const { state, setState } = useAppContext();

  const router = useRouter();
  const { search = '' } = router.query;

  const getRandomCharacter = (heroesList) => {
    return heroesList[Math.floor(Math.random() * heroesList.length)] || {};
  };

  useEffect(() => {
    const randomCharacter = () => {
      let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
      return characters[Math.floor(Math.random() * characters.length)];
    };

    return axios
      .get(
        `https://gateway.marvel.com:443/v1/public/characters?limit=100&nameStartsWith=${randomCharacter()}&ts=1&apikey=6c915ef1dcee8a56cc163a02592aad2d&hash=a85ef61e3494356c56e955d2ac0974f0`
      )
      .then((res) => {
        const results = res?.data?.data?.results || [];
        const character = getRandomCharacter(results);
        return axios
          .get(
            `https://gateway.marvel.com:443/v1/public/characters/${1009610}/comics?issueNumber=22&limit=100&ts=1&apikey=6c915ef1dcee8a56cc163a02592aad2d&hash=a85ef61e3494356c56e955d2ac0974f0`
          )
          .then((res) => {
            const comicList = res?.data?.data?.results || [];
            setState({ heroes: [character, ...comicList] });
          });
      });
  }, []);

  return (
    <MainContainer>
      <Head>
        <title>Marvel Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <GlobalStyle />
      <Search />
      <pre style={{ maxWidth: '100vw', overflow: 'auto' }}>
        {JSON.stringify(state)}
      </pre>
      {state?.heroes?.length ? (
        <CardGrid heroes={state.heroes} hasBanner={!search} />
      ) : (
        <p>Hero not found, try again</p>
      )}
      <Modal
        title={state?.heroes?.[0]?.name}
        onCloseClick={() => alert('Cierre modal')}
      >
        <DetailCard
          title={state?.heroes?.[2]?.title}
          url={
            state?.heroes?.[2]?.thumbnail?.path +
            '.' +
            state?.heroes?.[2]?.thumbnail?.extension
          }
          description={state?.heroes?.[2]?.description}
        />
        {/* {JSON.stringify(state?.heroes?.[2]?.title)} */}
      </Modal>
    </MainContainer>
  );
};

export default Home;
